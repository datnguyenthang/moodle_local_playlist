{"version":3,"file":"comment.min.js","sources":["../src/comment.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/templates'], function($, ajax, templates) {\n    var init = function() {\n        // Initialize event listeners initEventCommentListeners\n        initEventCommentListeners();\n\n        $('body').on('click', '#submitnewcomment', function(e) {\n            e.preventDefault();\n            if ($(this).prop('disabled')) {\n                return;\n            }\n            $(this).prop('disabled', true).text('Submitting...');\n\n            submitCommentForm($(this).closest('form'));\n            $(this).prop('disabled', false);\n        });\n\n        function initEventCommentListeners() {\n            // Function to handle delete comment\n            $('.delete-comment').on('click', function(e) {\n                e.preventDefault();\n                var commentid = $(this).data('commentid');\n\n                ajax.call([{\n                    methodname: 'local_playlist_delete_comment',\n                    args: {\n                        commentid: commentid\n                    }\n                }])[0].done(function(response) {\n                    templates.render('local_playlist/details/_comment_list', { comments: response.comments })\n                        .done(function(html) {\n                            $('#comments-list').html(html);\n                            initEventCommentListeners();\n                        });\n                }).fail(function(error) {\n                    console.error('Error deleting comment:', error);\n                });\n            });\n\n            // Function to show/hide reply form\n            $('.btn-replay').on('click', function(e) {\n                e.preventDefault();\n                var formId = $(this).data('id');\n                $('#' + formId).toggle();\n            });\n\n            // Function to handle edit comment\n            $('.edit-comment').on('click', function(e) {\n                e.preventDefault();\n                var commentid = $(this).data('commentid');\n                $('#comment-msg-' + commentid).toggle();\n                $('#edit-comment-form-' + commentid).toggle();\n            });\n            \n            $('body').on('keydown', '.edit-comment-text, .form-comment textarea', function(e) {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    $form = $(this).closest('form').toggle();\n                    $form.find('textarea[name=\"comment\"]').prop('disabled', true);\n\n                    setTimeout(function() {\n                        $form.data('processing', false); // Allow subsequent keypresses\n                    }, 1000);\n\n                    submitCommentForm($form);\n                    $form.find('textarea[name=\"comment\"]').val('');\n                }\n            });\n        }\n        \n        function submitCommentForm($form) {\n            var itemid = $form.find('input[name=\"itemid\"]').val();\n            var replyid = $form.find('input[name=\"replyid\"]').val();\n            var commentid = $form.find('input[name=\"commentid\"]').val();\n            var text = $form.find('textarea[name=\"comment\"], textarea[name=\"editcomment\"]').val();\n\n            if ($.trim(text) === '') {\n                return;\n            }\n\n            ajax.call([{\n                methodname: 'local_playlist_set_comment',\n                args: {\n                    itemid: itemid,\n                    replyid: replyid,\n                    commentid: commentid,\n                    text: text\n                }\n            }])[0].done(function(response) {\n                // Render the new template\n                templates.render('local_playlist/details/_comment_list', { comments: response.comments })\n                    .done(function(html) {\n                        $('#comments-list').html(html);\n                        initEventCommentListeners();\n                    });\n            }).fail(function(ex) {\n                console.error(ex);\n            });\n        }\n    };\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","ajax","templates","init","initEventCommentListeners","on","e","preventDefault","commentid","this","data","call","methodname","args","done","response","render","comments","html","fail","error","console","formId","toggle","key","shiftKey","$form","closest","find","prop","setTimeout","submitCommentForm","val","itemid","replyid","text","trim","ex"],"mappings":"AAAAA,gCAAO,CAAC,SAAU,YAAa,mBAAmB,SAASC,EAAGC,KAAMC,iBAoGzD,CACHC,KApGO,oBAeEC,4BAELJ,EAAE,mBAAmBK,GAAG,SAAS,SAASC,GACtCA,EAAEC,qBACEC,UAAYR,EAAES,MAAMC,KAAK,aAE7BT,KAAKU,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFL,UAAWA,cAEf,GAAGM,MAAK,SAASC,UACjBb,UAAUc,OAAO,uCAAwC,CAAEC,SAAUF,SAASE,WACzEH,MAAK,SAASI,MACXlB,EAAE,kBAAkBkB,KAAKA,MACzBd,kCAETe,MAAK,SAASC,OACbC,QAAQD,MAAM,0BAA2BA,aAKjDpB,EAAE,eAAeK,GAAG,SAAS,SAASC,GAClCA,EAAEC,qBACEe,OAAStB,EAAES,MAAMC,KAAK,MAC1BV,EAAE,IAAMsB,QAAQC,YAIpBvB,EAAE,iBAAiBK,GAAG,SAAS,SAASC,GACpCA,EAAEC,qBACEC,UAAYR,EAAES,MAAMC,KAAK,aAC7BV,EAAE,gBAAkBQ,WAAWe,SAC/BvB,EAAE,sBAAwBQ,WAAWe,YAGzCvB,EAAE,QAAQK,GAAG,UAAW,8CAA8C,SAASC,GAC7D,UAAVA,EAAEkB,KAAoBlB,EAAEmB,WACxBnB,EAAEC,iBACFmB,MAAQ1B,EAAES,MAAMkB,QAAQ,QAAQJ,SAChCG,MAAME,KAAK,4BAA4BC,KAAK,YAAY,GAExDC,YAAW,WACPJ,MAAMhB,KAAK,cAAc,KAC1B,KAEHqB,kBAAkBL,OAClBA,MAAME,KAAK,4BAA4BI,IAAI,iBAK9CD,kBAAkBL,WACnBO,OAASP,MAAME,KAAK,wBAAwBI,MAC5CE,QAAUR,MAAME,KAAK,yBAAyBI,MAC9CxB,UAAYkB,MAAME,KAAK,2BAA2BI,MAClDG,KAAOT,MAAME,KAAK,0DAA0DI,MAE3D,KAAjBhC,EAAEoC,KAAKD,OAIXlC,KAAKU,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CACFoB,OAAQA,OACRC,QAASA,QACT1B,UAAWA,UACX2B,KAAMA,SAEV,GAAGrB,MAAK,SAASC,UAEjBb,UAAUc,OAAO,uCAAwC,CAAEC,SAAUF,SAASE,WACzEH,MAAK,SAASI,MACXlB,EAAE,kBAAkBkB,KAAKA,MACzBd,kCAETe,MAAK,SAASkB,IACbhB,QAAQD,MAAMiB,OA5FtBjC,4BAEAJ,EAAE,QAAQK,GAAG,QAAS,qBAAqB,SAASC,GAChDA,EAAEC,iBACEP,EAAES,MAAMoB,KAAK,cAGjB7B,EAAES,MAAMoB,KAAK,YAAY,GAAMM,KAAK,iBAEpCJ,kBAAkB/B,EAAES,MAAMkB,QAAQ,SAClC3B,EAAES,MAAMoB,KAAK,YAAY"}